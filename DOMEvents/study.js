/*
목표: 다음 기능이 동작하도록 앱을 만들면 됩니다.
1. tweet 버튼을 클릭하면 사용자가 입력한 이름, 트윗 내용을 입력받습니다.
2. 입력된 내용으로 LI태그(트윗)를 생성하고 트위터 목록에 추가합니다.
3. 입력이 완료되면 입력창은 초기화 되어야 합니다.
4. 생성된 li(트윗)는 x버튼을 클릭하면 삭제됩니다.

내용이 어려울 수는 있습니다만, 천천히 한줄씩 읽고 따라와주시면 앱을 금방 만들 수 있을거에요!!
모르는 건 자유롭게 검색하시거나 강의를 참고해주시고
천천히 지시사항을 따르며 앱을 만들어주세요.
(웬만하면 직접 해보시고, 모르겠으면 하나씩 따라와주시면 좋겠습니다!)
*/

/*
1. 입력받기(이벤트리스너 등록하고 작성하기)
form#myTweetForm 안에는 사용자 이름, 트윗 내용을 입력하는 input이 있고 button#tweetSubmit이 있습니다.
이 버튼을 클릭했을 때 이벤트가 동작하도록 아래의 지시사항을 따라가며 작업해보세요.

- form의 버튼을 '클릭'했을 때 이벤트 핸들러가 작동하도록 이벤트 리스너를 등록해야 합니다.
- form에서 버튼을 클릭하면 action의 페이지로 이동하도록 기본 동작이 설정되어 있습니다. 이 기본동작이 '실행되지 않도록 막아야' 합니다.
- '사용자 이름 input의 값', '트윗 내용 input의 값'을 받아와야 합니다.
*/

/*
2. 트윗 생성하기
1번에서 작업한 이벤트 리스너 안에 이어서 작업합니다.
작업하기 전에 템플릿태그에 대해 설명드리겠습니다.
이번 프로젝트에서는 태그를 생성할 때 템플릿 태그를 활용하여 DOM을 생성합니다.
템플릿 태그를 임의의 변수에 복사하여 할당합니다.
그리고 이 변수에서 querySelector를 이용해 원하는 위치의 노드를 찾아 입력값을 넣어주고, 완성된 노드를 원하는 위치에 삽입하면 됩니다.
위 과정은 어려울 수 있으니 아래의 지시사항을 천천히 따라오며 작업해주세요.

- 사전에 작성된 변수 templateTweetItem에 템플릿 태그가 담겨 있습니다. 특정 변수에 다음과 같이 입력하면 태그 안의 내용이 복사됩니다.
templateTweetItem.content.cloneNode(true)
(궁금하다면 cloneNode에 대해 찾아보세요.)
위 코드를 사용해 노드를 복사해 임의의 변수tweetItem에 할당합니다. (변수명은 반드시 똑같이 쓸 필요없습니다. 설명을 위해 정해놓았습니다.)
- document가 아니라 위의 tweetItem에 querySelector를 사용하여 '유저이름'이 들어갈 노드, '트윗 내용'이 들어갈 노드를 찾습니다.
- 찾은 노드에 각각 유저이름의 값과 트윗 내용 값이 할당되도록 합니다.
- 콘솔 창에 변수를 띄어봐서 값이 제대로 입력되었는지 확인해봅니다.
- 제대로 입력되었다면 트위터 목록(elTweetsList)에 완성된 최종 노드(li)를 삽입합니다. 
*/

/*
3. 입력 초기화하기
여기까지 오셨으면 최소한의 기능은 잘 작동할 것입니다.
이제 간단하게 입력을 초기화합니다. 
마찬가지로 계속해서 1번에 처음 작성한 이벤트 리스너에 작성합니다.

- 입력받았던 값에 그저 빈 문자열을 추가하기만 하면 됩니다. '유저이름' input과 '트윗 내용' input에 빈 값을 할당해 초기화합니다.  
*/

/*
4. 트윗 삭제하기(트윗의 x버튼을 클릭하면 해당 트윗이 삭제됩니다.)
이 작업은 좀 어려울 수 있으니 설명을 잘 읽어보며 따라오시기 바랍니다.
x버튼을 클릭하면 이벤트가 발생한다고 해서 x버튼에 클릭 이벤트 리스너를 만들면 작동하지 않습니다.
왜일까요? li태그의 x버튼이 매번 존재하는 게 아니기 때문입니다. 존재하지 않는 노드에 이벤트를 추가할 수는 없습니다.
때문에 이벤트 위임의 원리를 사용해야 합니다.

- 이벤트 위임하기 -> 사라지지 않는 노드인 부모 요소에 이벤트 리스너를 추가하면 이벤트 위임이 됩니다.
추가되는 li태그의 부모요소이면서 사라지지 않고 계속 있는 요소인 elTweetsList에 이벤트 리스너를 추가합니다.
삭제는 클릭시 이뤄지므로 이벤트는 클릭 이벤트입니다.
- 추가한 이벤트 리스너 안에 이어서 작성합니다.
- 이벤트 리스너의 콜백함수에 매개변수를 설정해 전달인자를 받아옵니다.
elTweetsList에 클릭 이벤트를 걸었기 때문에 그 안의 요소들을 클릭하면 해당 요소들의 정보를 볼 수 있습니다. 이는 이벤트 리스너에 작성한 콜백함수에서 매개변수로 전달됩니다. 
이 값은 이벤트 객체로 보통은 매개변수 e 또는 event 로 명명하여 받습니다.  
- 콘솔창에 이 이벤트 객체를 console.dir로 띄어봅니다. 여기서 e.target과 e.target.className을 잘 살펴봅니다.
- elTweetsList 안의 요소들을 클릭했을 때 e.target.className을 확인해 이 값이 삭제 버튼의 클래스 값이 일치할 경우, 
요소가 삭제되도록 해야합니다.
삭제할 요소 li는 closest를 활용하면 쉽게 찾을 수 있습니다.
*/

// -------------------------------------- 여기서부터 작업내용을 입력하시면 됩니다.

const templateTweetItem = document.querySelector("#tweetItem"); //템플릿 태그 #tweetItem이 있는 DOM
const elTweetsList = document.querySelector("#tweets"); //트위터 목록 DOM
